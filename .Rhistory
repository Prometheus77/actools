usethis::use_package("checkmate")
usethis::use_gpl3_license()
?use_gpl3_license
usethis::use_gpl3_license("Aaron Cooley")
?assert_vector
?assert_numeric
?round
devtools::load_all(".")
hard_round(c(1.2, 1.3, 1.4), 1)
devtools::load_all(".")
hard_round(c(1.2, 1.3, 1.4), 1)
usethis::use_testthat()
x <- c(1.2, 1.3, 1.4)
x_sum <- sum(x, na.rm = TRUE)
x_sum
x_round <- round(x / units, 0) * units
units <- 1
x_round <- round(x / units, 0) * units
x_round
sum(x_round)
round(x_sum / units, 0) * units
x_sum
sum_diff <- x_sum - sum(x_round, na.rm = TRUE)
sum_diff
x_diff <- x - x_round
x_diff
x_sum - sum(x_round, na.rm = TRUE) > 0
# take the biggest x_diff and increase corresponding x_round up a unit
x_round[max(x_diff, na.rm = TRUE)] <- x_round[max(x_diff, na.rm = TRUE)] + units
x_round
max(x_diff, na.rm = TRUE)
# take the biggest x_diff and increase corresponding x_round up a unit
x_round[x_diff == max(x_diff, na.rm = TRUE)] <- x_round[x_diff == max(x_diff, na.rm = TRUE)] + units
x_round
devtools::load_all(".")
hard_round(c(1.2, 1.3, 1.4), 1)
devtools::load_all(".")
hard_round(c(1.2, 1.3, 1.4), 1)
devtools::load_all(".")
hard_round(c(37.8, 19.87, 10.65, 10.4, 10.2, 6.56, 2.61, 1.91), 1)
hard_rount(c("A", "B"), 1)
hard_round(c("A", "B"), 1)
hard_round(c(1, 2), 0)
?assert_number
?checkmate
hard_round(3, 1)
hard_round(c(3.0, 3.1, 3.2), 5)
hard_round(c(3.0, 3.1, 3.2), .5)
hard_round(c(3.0, 3.1, 3.2), .05)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
# take the biggest x_diff and increase corresponding x_round up a unit
max_diff <- max(x_diff, na.rm = TRUE)
max_diff
x <- c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4)
x
x_sum <- sum(x, na.rm = TRUE)
x_round <- round(x / units, 0) * units
x_diff <- x - x_round
x_diff
# take the biggest x_diff and increase corresponding x_round up a unit
max_diff <- max(x_diff, na.rm = TRUE)
max_diff
x_diff == max_diff
sum(x_diff == max_diff)
sum(x_diff == max_diff) > 1
sample(c(3,5,6), 1)
devtools::load_all(".")
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 0)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 0.5)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 0.1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 1)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 2)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 4)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 5)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 5)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 5)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 6)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 10)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 20)
hard_round(c(1.4, 1.4, 1.4, 1.4, 1.4, 1.4), 30)
devtools::document()
devtools::document()
devtools::load_all(".")
devtools::document()
?hard_round
devtools::document()
?hard_round
devtools::document()
?hard_round
devtools::document()
a <- 5 / 0
a
a <- NA
a
a == NA
devtools::load_all(".")
a %==% NA
devtools::load_all(".")
devtools::load_all(".")
a %==% NA
a
a %==% NA
b <- NA
a %==% b
a
b
?is_empty
library(BBmisc)
is_empty
?is_empty
library(purrr)
is_empty
length(a)
a
devtools::load_all(".")
a %==% b
a == b
NA %==% NA
NULL %==% NULL
b <- NULL
a %==% b
a <- NULL
b <- NULL
a %==% b
devtools::document()
?`%==%`
a %==% c
a %!=% c
?hard_round
a <- list()
b <- list()
a %==% b
a %==% NA
a %==% NULL
a %==% list()
a == list()
devtools::document()
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
?btwn
?`%btwn%`
a <- c(0:10)
a %btwn% c(1,5)
a %_btwn_% c(1,5)
devtools::load_all(".")
?hard_round
x <- c(1.3, 1.3, 1.3)
sum(x)
round(sum(x))
round(x, 0)
sum(round(x, 0))
hard_round(x, 1)
sum(hard_round(x, 1))
devtools::load_all(".")
x <- c(1,2,3)
1 %!in% x
x <- c(1,2,3)
expect_true(0 %!in% x)
devtools::load_all(".")
NULL %==% NULL
devtools::load_all(".")
NULL %==% NULL
library(devtools)
devtools::load_all(".")
3 %!in% c(1,2,3)
?do.call
a <- list("a", 3, "b")
a
paste0(a)
paste0("a", 3, "b")
?paste0
paste0(unlist(a))
paste(a, collapse = NULL)
paste(unlist(a), collapse = NULL)
unlist(a)
a
cat(unlist(a))
?cat
cat(unlist(a), sep = "")
paste(cat(unlist(a), sep = ""))
paste0(cat(unlist(a), sep = ""))
cat(unlist(a), sep = "")
a <- cat(unlist(a), sep = "")
a
?message
a <- list("a", 3, "b")
a
unlist(a)
paste0(unlist(a))
do.call("paste0", unlist(a))
do.call("paste0", list(unlist(a)))
do.call("paste0", list(... = unlist(a)))
paste(a, collapse = "")
#' @title Including variables in message, warning, and stop text.
#'
#' @description Convenience function that replaces \code{message(paste0("This is
#'   ", x))}. Also available for \code{warning()} and \code{stop()}.
#'
#' @export
message0 <- function(...) {
dots <- paste(..., collapse = "")
message(dots)
}
message0("a", 3, "b")
#' @title Including variables in message, warning, and stop text.
#'
#' @description Convenience function that replaces \code{message(paste0("This is
#'   ", x))}. Also available for \code{warning()} and \code{stop()}.
#'
#' @export
message0 <- function(...) {
dots <- paste(..., collapse = "", sep = "")
message(dots)
}
message0("a", 3, "b")
a <- 5
message0("a is equal to", a)
message0("a is equal to ", a)
devtools::load_all(".")
stop0("a is equal to ", a)
warning0("a is equal to ", a)
?stats::glm.fit
iris
iris3
iris
setosa <- iris[, 1:3]
setosa
setosa$setosa <- (iris$Species == "setosa")
setosa
setosa$setosa <- (ifelse(iris$Species == "setosa"), 1, 0)
setosa$setosa <- ifelse(iris$Species == "setosa", 1, 0)
setosa
setosa_glm <- glm.fit(setosa ~ ., data = setosa)
setosa_glm <- glm(setosa ~ ., data = setosa)
setosa_glm
setosa_glm <- try_load("setosa_glm.RDS", save = TRUE,
{
setosa <- iris[, 1:3]
setosa$setosa <- ifelse(iris$Species == "setosa", 1, 0)
setosa_glm <- glm(setosa ~ ., data = setosa)
})
try_load <- function(filename, expr, save = FALSE, ...) {
if (file.exists(filename)) {
message(sprintf("Loading %s", filename))
readRDS(filename)
} else {
output <- evalq(expr)
if (save == TRUE) {
message(sprintf("Saving %s", filename))
dots <- list(...)
do.call("saveRDS", c(list(object = output, file = filename), dots))
}
output
}
}
setosa_glm <- try_load("setosa_glm.RDS", save = TRUE,
{
setosa <- iris[, 1:3]
setosa$setosa <- ifelse(iris$Species == "setosa", 1, 0)
setosa_glm <- glm(setosa ~ ., data = setosa)
})
readRDS("setosa_glm.RDS")
devtools::load_all(".")
devtools::document()
